{"version":3,"sources":["components/imgs/hannukard.jpg","components/imgs/holidaycard.jpg","components/imgs/lights.jpg","components/imgs/nolinesback.jpg","components/imgs/back.jpg","logo.svg","components/Home.js","components/PostcardHan.js","components/PostcardChris.js","components/PostcardHol.js","components/Card.js","components/Nav.js","components/Postcard.js","components/Snow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","TheLink","Link","Form","form","Input","input","Btn","button","H1","h1","Home","props","setId","id","holiday","setHoliday","useState","code","setCode","useEffect","lowerCode","toLowerCase","style","color","onSubmit","e","preventDefault","console","log","name","onChange","target","value","placeholder","onClick","window","scrollTo","top","behavior","to","background","borderRadius","padding","CardBack","back","CardFront","hannukah","Postcard","state","isFlipped","handleClick","bind","this","setState","prevState","flipDirection","frameborder","allowFullScreen","webkitallowfullscreen","mozallowfullscreen","width","height","src","url","React","Component","lights","PostcardChris","PostcardHol","Div","Card","textColor","useParams","includes","PostcardHan","nav","NavLink","Snow","App","className","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cda9ca9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hannukard.8eaa606d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/holidaycard.0c122b51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lights.872d26c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nolinesback.f6bd42da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/back.3a170548.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\n    // width: 100%;\n    // height: 100%;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    align-items: center;\n    // margin: 50% 2%;\n    position: relative;\n    z-index: 10000;\n    // color: white;\n    // border: 1px solid red;\n    // margin-top: 30%;\n//     @media(min-width: 1000px){\n//         margin-top: 20%;\n//     }\n//     @media(min-width: 1370px){\n//         margin-top: 15%;\n//     }\n// `;\n\nconst TheLink = styled(Link)`\n    text-decoration: none;\n    font-size: 1rem;\n    color: red;\n    margin: 4% auto;\n    // padding: 2% 8%;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`;\n\nconst Input = styled.input`\n    margin: 4% 0;\n    font-size: 1rem;\n    padding: 4%;\n    width: 200%;\n    border-radius: 5px;\n    border: none;\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    @media(max-width: 430px){\n        width: 90%;\n    }\n`;\n\nconst Btn = styled.button`\n    border-radius: 5px;\n    width: 80%;\n    border: 1px solid white;\n    padding: 2% 4%;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    margin-top: 10%;\n    // box-shadow: 3px 3px 8px 5px #2b1616;\n`;\n\nconst H1 = styled.h1`\n    // margin-top: -10%;\n    margin-top: 15%;\n    color: white;\n    @media (max-width: 1150px){\n        margin-top: 30%;\n    }\n    @media (max-width: 800px){\n        margin-top: 45%;\n    }\n    @media (max-width: 500px){\n        margin-top: 60%;\n    }\n`;\n\nconst Div = styled.div`\n    border: 1px solid white;\n    width: 500px;\n    height: 500px;\n    // margin-top: 25%;\n`;\n\nconst Home = (props) =>{\n\n    const {setId, id, holiday, setHoliday} = props;\n\n    const [code, setCode] = useState(\"\");\n    useEffect(()=>{\n        let lowerCode = code.toLowerCase();\n        setId(lowerCode);\n    }, [code])\n\n    function onSubmit(e){\n        e.preventDefault();\n        // setId(code);\n        console.log(id);\n    }\n\n\n    function handleChange (e) {\n        e.preventDefault();\n        setCode(e.target.value);\n    }\n\n    return(\n        <Container>\n            {/* <Div> */}\n            <H1>Happy Holidays!</H1>\n            <h4 style={{color: \"white\"}}>Enter your greeting code below</h4>\n            <Form onSubmit={onSubmit}>\n                <Input name=\"code\" id=\"code\" onChange={handleChange} value={code} placeholder=\"enter code here\"/>\n                <Btn onClick={(e)=>{\n                    e.preventDefault();\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                }\n                }><TheLink to={`/card/${id}`}>Get your Card!</TheLink></Btn>\n            </Form>\n            <p style={{color: \"white\", background: \"rgba(0,0,0,0.5)\", borderRadius: \"5px\", padding: \"1% 2%\"}}>Try entering \"christmas\", \"holiday\", or \"hannukah\"</p>\n            {/* </Div> */}\n        </Container>\n    )\n}\n\nexport default Home","import React, { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip';\n// import './postcard.css'\nimport styled from 'styled-components'\nimport back from './imgs/nolinesback.jpg'\nimport holiday from './imgs/holidaycard.jpg'\nimport hannukah from './imgs/hannukard.jpg'\nimport lights from './imgs/lights.jpg'\n\nconst CardBack = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background: url(${back});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst CardFront = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background-image: url(${hannukah});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst Container = styled.div`\n    margin: 15% 2%;\n    position: relative;\n    z-index: 10;\n    // border: 1px solid red;\n    @media(min-width: 1160px){\n        margin: 8% 2% 15% 2%;\n    }\n    @media(min-width: 1400px){\n        margin: 4% 2% 15% 2%;\n    }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        margin: 0 auto;\n  }\n`;\n\nconst Btn = styled.button`\n    margin-top: 4%;\n    border: none;\n    border-radius: 5px;\n    background: dodgerblue;\n    padding: 1% 2%;\n    color: white;\n`;\n\n\nclass Postcard extends React.Component {\n    constructor() {\n      super();\n        this.state = {\n        isFlipped: false\n      };\n      \n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e) {\n      e.preventDefault();\n      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n   \n    // style={{background: `url(${hannukah})`}}\n    render() {\n        // if(this.props.code === \"hannukah\"){\n            return (\n                <Container onClick={this.handleClick}>\n              <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n                <CardFront >\n                  {/* {`${this.props.code}`} */}\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardFront>\n         \n                <CardBack >\n                  {/* This is the back of the card. */}\n                  <iframe frameborder=\"0\" allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" width=\"70%\" height=\"60%\" src={this.props.url} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardBack>\n              </ReactCardFlip>\n              {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n              </Container>\n            )\n        // } else {\n        //     return (\n        //         <Container onClick={this.handleClick}>\n        //       <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n        //         <CardFront style={{background: `url(${lights})`}}>\n        //           {`This is the front of the card. ${this.props.code}`}\n        //           {/* <button onClick={this.handleClick}>Click to flip</button> */}\n        //         </CardFront>\n         \n        //         <CardBack >\n        //           {/* This is the back of the card. */}\n        //           <iframe width=\"50%\" height=\"40%\" src=\"https://www.youtube.com/embed/q-I-JNmZA98\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        //           {/* <button onClick={this.handleClick}>Click to flip</button> */}\n        //         </CardBack>\n        //       </ReactCardFlip>\n        //       {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n        //       </Container>\n        //     )\n        // }\n      \n    }\n  }\n\nexport default Postcard\n","import React, { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip';\n// import './postcard.css'\nimport styled from 'styled-components'\nimport back from './imgs/nolinesback.jpg'\nimport holiday from './imgs/holidaycard.jpg'\nimport hannukah from './imgs/hannukard.jpg'\nimport lights from './imgs/lights.jpg'\n\nconst CardBack = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background: url(${back});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst CardFront = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background-image: url(${lights});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst Container = styled.div`\n    margin: 15% 2%;\n    position: relative;\n    z-index: 10;\n    // border: 1px solid red;\n    @media(min-width: 1160px){\n        margin: 8% 2% 15% 2%;\n    }\n    @media(min-width: 1400px){\n        margin: 4% 2% 15% 2%;\n    }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        margin: 0 auto;\n  }\n`;\n\nconst Btn = styled.button`\n    margin-top: 4%;\n    border: none;\n    border-radius: 5px;\n    background: dodgerblue;\n    padding: 1% 2%;\n    color: white;\n`;\n\n\nclass PostcardChris extends React.Component {\n    constructor() {\n      super();\n        this.state = {\n        isFlipped: false\n      };\n      \n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e) {\n      e.preventDefault();\n      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n   \n    // style={{background: `url(${hannukah})`}}\n    render() {\n        // if(this.props.code === \"hannukah\"){\n            return (\n                <Container onClick={this.handleClick}>\n              <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n                <CardFront >\n                  {/* {`This is the front of the card. ${this.props.code}`} */}\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardFront>\n         \n                <CardBack >\n                  {/* This is the back of the card. */}\n                  <iframe frameborder=\"0\" allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" width=\"70%\" height=\"60%\" src={this.props.url} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardBack>\n              </ReactCardFlip>\n              {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n              </Container>\n            )\n        // } else {\n        //     return (\n        //         <Container onClick={this.handleClick}>\n        //       <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n        //         <CardFront style={{background: `url(${lights})`}}>\n        //           {`This is the front of the card. ${this.props.code}`}\n        //           {/* <button onClick={this.handleClick}>Click to flip</button> */}\n        //         </CardFront>\n         \n        //         <CardBack >\n        //           {/* This is the back of the card. */}\n        //           <iframe width=\"50%\" height=\"40%\" src=\"https://www.youtube.com/embed/q-I-JNmZA98\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        //           {/* <button onClick={this.handleClick}>Click to flip</button> */}\n        //         </CardBack>\n        //       </ReactCardFlip>\n        //       {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n        //       </Container>\n        //     )\n        // }\n      \n    }\n  }\n\nexport default PostcardChris","import React, { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip';\n// import './postcard.css'\nimport styled from 'styled-components'\nimport back from './imgs/nolinesback.jpg'\nimport holiday from './imgs/holidaycard.jpg'\nimport hannukah from './imgs/hannukard.jpg'\nimport lights from './imgs/lights.jpg'\n\nconst CardBack = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background: url(${back});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst CardFront = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 233px;\n    background-image: url(${holiday});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        width: 350px;\n        height: 233px;\n  }\n`;\n\nconst Container = styled.div`\n    margin: 15% 2%;\n    position: relative;\n    z-index: 10;\n    // border: 1px solid red;\n    @media(min-width: 1160px){\n        margin: 8% 2% 15% 2%;\n    }\n    @media(min-width: 1400px){\n        margin: 4% 2% 15% 2%;\n    }\n    @media only screen \n    and (min-device-width: 640px) \n    and (-webkit-min-device-pixel-ratio: 2)\n    and (orientation: landscape) {\n        margin: 0 auto;\n  }\n`;\n\nconst Btn = styled.button`\n    margin-top: 4%;\n    border: none;\n    border-radius: 5px;\n    background: dodgerblue;\n    padding: 1% 2%;\n    color: white;\n`;\n\n\nclass PostcardHol extends React.Component {\n    constructor() {\n      super();\n        this.state = {\n        isFlipped: false\n      };\n      \n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e) {\n      e.preventDefault();\n      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n   \n    // style={{background: `url(${hannukah})`}}\n    render() {\n        // if(this.props.code === \"hannukah\"){\n            return (\n                <Container onClick={this.handleClick}>\n              <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n                <CardFront >\n                  {/* {`${this.props.code}`} */}\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardFront>\n         \n                <CardBack >\n                  {/* This is the back of the card. */}\n                  <iframe frameborder=\"0\" allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" width=\"70%\" height=\"60%\" src={this.props.url} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardBack>\n              </ReactCardFlip>\n              {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n              </Container>\n            )\n\n      \n    }\n  }\n\nexport default PostcardHol","import React, {useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport PostcardHan from './PostcardHan';\nimport styled from 'styled-components'\nimport holiday from './imgs/holidaycard.jpg'\nimport hannukah from './imgs/hannukard.jpg'\nimport lights from './imgs/lights.jpg'\nimport PostcardChris from './PostcardChris'\nimport PostcardHol from './PostcardHol'\n\nlet Div = styled.div`\n    // margin: auto 4%;\n    display: flex;\n    // max-width: 100%;\n    // box-sizing: border-box;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    // border: 1px solid red;\n`;\n\nlet H1 = styled.h1`\n    padding: 0 2%;\n    // background: red;\n    text-align: center;\n    @media(max-width: 570px){\n        font-size: 1.5rem;\n    }\n`;\n\n\nconst Card = (props) => {\n    const {holiday, setHoliday} = props;\n    let textColor = \"white\"\n    const {id} = useParams();\n    const [code] = useState(id);\n    const [front, setFront] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n\n    if (id.includes(\"hannukah\")){\n        textColor=\"white\";\n        setHoliday(\"hannukah\");\n        // setFront(\"hannukah\");\n    } else if (id.includes(\"christmas\")){\n        textColor=\"white\";\n        setHoliday(\"christmas\");\n    } else if (id.includes(\"holiday\")){\n        textColor=\"black\";\n        setHoliday(\"holiday\");\n    }\n    return (\n        <Div>\n            <H1 style={{color:`${textColor}`}}>Tap or click to flip</H1>\n            \n            {holiday === \"hannukah\" && <PostcardHan code={code} url={\"https://www.youtube.com/embed/CdaKdzp2JLw\"}/>}\n            {holiday === \"christmas\" && <PostcardChris url={\"https://www.youtube.com/embed/MswymGTFYbw\"}/>}\n            {holiday === \"holiday\" && <PostcardHol url={\"https://www.youtube.com/embed/XI9j2uriw8o\"}/>}\n            \n        </Div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst NavBar = styled.nav`\n    background: rgba(0,0,0,.5);\n    display: flex;\n    position: relative;\n    z-index: 10;\n`;\n\nconst TheLink = styled(NavLink)`\n    text-decoration: none;\n    color: white;\n    font-size: 2rem;\n    margin: .5% 3%;\n`;\n\n\nconst Nav = () =>{\n    return(\n        <NavBar>\n            <TheLink to=\"/\">Home</TheLink>\n            \n        </NavBar>\n    )\n}\n\nexport default Nav","import React, { useState } from 'react'\nimport ReactCardFlip from 'react-card-flip';\n// import './postcard.css'\nimport styled from 'styled-components'\nimport back from './imgs/back.jpg'\nimport holiday from './imgs/holidaycard.jpg'\nimport hannukah from './imgs/hannukard.jpg'\nimport lights from './imgs/lights.jpg'\n\nconst CardBack = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 197px;\n    background: url(${back});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n`;\n\nconst CardFront = styled.div`\n    box-shadow: 3px 3px 8px 5px #2b1616;\n    width: 350px;\n    height: 197px;\n    background-image: url(${hannukah});\n    background-size: cover;\n    background-position: 50% 50%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    @media(min-width: 530px){\n        width: 500px;\n        height: 333px;\n    }\n    @media(min-width: 750px){\n        width: 700px;\n        height: 466px;\n    }\n    @media(min-width:1160px){\n        width: 1000px;\n        height: 666px;\n    }\n    @media(min-width:1450px){\n        width: 1200px;\n        height: 800px;\n    }\n    // @media(min-width:1600px){\n    //     width: 1400px;\n    //     height: 787px;\n    // }\n`;\n\nconst Container = styled.div`\n    margin: 15% 2%;\n    position: relative;\n    z-index: 10;\n    // border: 1px solid red;\n    @media(min-width: 1160px){\n        margin: 8% 2% 15% 2%;\n    }\n    @media(min-width: 1400px){\n        margin: 4% 2% 15% 2%;\n    }\n`;\n\nconst Btn = styled.button`\n    margin-top: 4%;\n    border: none;\n    border-radius: 5px;\n    background: dodgerblue;\n    padding: 1% 2%;\n    color: white;\n`;\n\n\nclass Postcard extends React.Component {\n    constructor() {\n      super();\n        this.state = {\n        isFlipped: false\n      };\n      \n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e) {\n      e.preventDefault();\n      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n   \n    // style={{background: `url(${hannukah})`}}\n    render() {\n        // if(this.props.code === \"hannukah\"){\n            return (\n                <Container onClick={this.handleClick}>\n              <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n                <CardFront >\n                  {`This is the front of the card. ${this.props.code}`}\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardFront>\n         \n                <CardBack >\n                  {/* This is the back of the card. */}\n                  <iframe width=\"50%\" height=\"40%\" src=\"https://www.youtube.com/embed/q-I-JNmZA98\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                  {/* <button onClick={this.handleClick}>Click to flip</button> */}\n                </CardBack>\n              </ReactCardFlip>\n              {/* <Btn onClick={this.handleClick}>Click to flip</Btn> */}\n              </Container>\n            )\n\n      \n    }\n  }\n\nexport default Postcard","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Snowfall from 'react-snowfall'\nimport styled from 'styled-components'\n\nconst Snow = () => {\n\n    return (\n        // <div style={{ height: \"150%\", width: \"100%\", background: '#282c54'}}>\n        <Snowfall />\n      //  </div>\n        \n    )\n}\n\n\nexport default Snow","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport Card from './components/Card'\nimport Nav from './components/Nav'\nimport {Route} from 'react-router-dom'\nimport Postcard from './components/Postcard'\nimport Snow from './components/Snow'\nimport styled from 'styled-components'\n\n\n\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [holiday, setHoliday] = useState(\"christmas\");\n\n\n  return (\n    <div className={`App, ${holiday}`}>\n      {/* <Nav/> */}\n      <Route exact path=\"/\"><Home setId={setId} id={id} holiday={holiday} setHoliday={setHoliday}/></Route>\n      <Route exact path=\"/card/:id\"><Card holiday={holiday} setHoliday={setHoliday}/></Route>\n        {/* <Postcard/> */}\n        <Snow/>\n\n      \n\n      \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}